# root: watch root dir
# If root is empty, then watch Current Working Directory.
# If root is in the form of "cfg:FOO", then `filepath.join(cfgFileDir, FOO)` will be used as the value of root.
# If root is in the form of "env:FOO", then the environment variable FOO will be used as the value of root.
# if root is an abs path, then watch it.
root = "cfg:../.."

# build is optional, which is a step preceding the run step.
# build can be string or []string
build = "$WAR_CFG_DIR/build.sh"

# run is a required, which describes how to run the program.
# run can be string or []string
run = "$WAR_CFG_DIR/run.sh"

# The interval time for function debouncing.
# delay defaults to 1s
delay = "1s"

# If cancel_last is true, when a file change is detected, the last ongoing running will be cancelled.
# If cancel_last is false, it will wait until the last ongoing running process finishes before it starts execution.
# cancel_last defaults to true
cancel_last = true

# If the SIGTERM signal fails to stop the run process group within the specified time, then the SIGKILL signal will be sent to the run process group.
# If term_timeout is zero, then the SIGKILL signal will be sent directly to the run process group.
# term_timeout defaults to 1s
term_timeout = "1s"

# The file extensions of the files that need to be monitored.
# An empty value indicates no filtering. It is recommended to fill in this field.
include_exts = [".go", ".sh", ".java"]

# Files/directories to be ignored, using the same syntax as .gitignore.
# It is recommended to fill in this field.
ignore_rules = [
    "*.txt",
    "*.md",
    "benchmarks/",
    "output/",
]

#ignore_rules = '''
#*.sh
#*.md
#benchmarks
#'''

# envs that are visible to 'build' and 'run' command
[env]
foo = "bar"
